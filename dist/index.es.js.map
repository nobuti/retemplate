{"version":3,"file":"index.es.js","sources":["../src/index.js"],"sourcesContent":["import { Children } from 'react'\n\n/*\n * Given a string, replace every {key} with the data[key] passed. This can be a function returning a\n * string or a raw string. The result will be an array of strings mixed with jsx elements. The primary\n * use case is similar to using String.prototype.replace except for React.\n *\n * Example:\n * template(\"hola {mundo} cruel {mundo} foo {wadus}\", { mundo: () => \"<span>mundo</span>\", wadus: \"foo\" })\n *\n */\n\nfunction insert (arr, index, ...items) {\n  return [...arr.slice(0, index), ...items, ...arr.slice(index)]\n}\n\nconst flat = arr => [].concat(...arr)\n\nconst replace = (result, match, data) => {\n  for (let index = 1; index < result.length; index += 2) {\n    const datum = data[match]\n    const item = typeof datum === 'function' ? datum() : datum\n    result = insert(result, index, item)\n  }\n\n  return result\n}\n\nexport default (locale, data = {}) => {\n  let str = [locale]\n\n  Object.keys(data).forEach(key => {\n    const re = new RegExp('{' + key + '}', 'g')\n    str = flat(str).map(x => {\n      const arr = x.split(re)\n      const result = replace(arr, key, data)\n      return result\n    })\n  })\n\n  const children = flat(str).filter(s => !!s)\n  return Children.map(children, child => child)\n}\n"],"names":["insert","arr","index","items","slice","flat","concat","replace","result","match","data","length","datum","item","locale","str","Object","keys","forEach","key","re","RegExp","map","x","split","children","filter","s","Children","child"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;AAUA,SAASA,MAAT,CAAiBC,GAAjB,EAAsBC,KAAtB,EAAuC;oCAAPC,KAAO;IAAPA,KAAO;;;sCAC1BF,GAAG,CAACG,KAAJ,CAAU,CAAV,EAAaF,KAAb,CAAX,GAAmCC,KAAnC,qBAA6CF,GAAG,CAACG,KAAJ,CAAUF,KAAV,CAA7C;;;AAGF,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAAAJ,GAAG;;;SAAI,YAAGK,MAAH,gCAAaL,GAAb,EAAJ;CAAhB;;AAEA,IAAMM,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAASC,KAAT,EAAgBC,IAAhB,EAAyB;OAClC,IAAIR,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGM,MAAM,CAACG,MAAnC,EAA2CT,KAAK,IAAI,CAApD,EAAuD;QAC/CU,KAAK,GAAGF,IAAI,CAACD,KAAD,CAAlB;QACMI,IAAI,GAAG,OAAOD,KAAP,KAAiB,UAAjB,GAA8BA,KAAK,EAAnC,GAAwCA,KAArD;IACAJ,MAAM,GAAGR,MAAM,CAACQ,MAAD,EAASN,KAAT,EAAgBW,IAAhB,CAAf;;;SAGKL,MAAP;CAPF;;AAUA,aAAe,UAACM,MAAD,EAAuB;MAAdJ,IAAc,uEAAP,EAAO;MAChCK,GAAG,GAAG,CAACD,MAAD,CAAV;EAEAE,MAAM,CAACC,IAAP,CAAYP,IAAZ,EAAkBQ,OAAlB,CAA0B,UAAAC,GAAG,EAAI;QACzBC,EAAE,GAAG,IAAIC,MAAJ,CAAW,MAAMF,GAAN,GAAY,GAAvB,EAA4B,GAA5B,CAAX;IACAJ,GAAG,GAAGV,IAAI,CAACU,GAAD,CAAJ,CAAUO,GAAV,CAAc,UAAAC,CAAC,EAAI;UACjBtB,GAAG,GAAGsB,CAAC,CAACC,KAAF,CAAQJ,EAAR,CAAZ;UACMZ,MAAM,GAAGD,OAAO,CAACN,GAAD,EAAMkB,GAAN,EAAWT,IAAX,CAAtB;aACOF,MAAP;KAHI,CAAN;GAFF;MASMiB,QAAQ,GAAGpB,IAAI,CAACU,GAAD,CAAJ,CAAUW,MAAV,CAAiB,UAAAC,CAAC;WAAI,CAAC,CAACA,CAAN;GAAlB,CAAjB;SACOC,QAAQ,CAACN,GAAT,CAAaG,QAAb,EAAuB,UAAAI,KAAK;WAAIA,KAAJ;GAA5B,CAAP;CAbF;;;;"}